{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","_ref","filter","handle","_jsxs","children","_jsx","value","onChange","PersonForm","name","nameHandle","number","numberHandle","addPerson","onSubmit","type","Person","person","remove","onClick","id","Persons","persons","showAll","search","personsToShow","toLocaleLowerCase","includes","map","Notification","message","style","color","fontStyle","background","fontSize","borderStyle","borderRadius","padding","margin","baseUrl","personService","getAll","axios","get","then","response","data","create","newObject","post","delete","concat","update","put","App","_useState","useState","_useState2","_slicedToArray","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","setShowAll","_useState9","_useState10","searchName","setSearchName","_useState11","_useState12","setMessage","_useState13","_useState14","messageType","setMessageType","useEffect","initialPersons","console","log","event","target","preventDefault","isNew","find","undefined","window","confirm","personObject","returnedPerson","setTimeout","result","p","catch","error","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.311fc6da.chunk.js","sourcesContent":["const Filter = ({ filter, handle }) => {\n    return (\n      <div>\n      filter shown with\n      <input\n        value={filter}\n        onChange={handle}/>\n      </div>\n    )\n  }\n\nexport default Filter","const PersonForm = ({ name, nameHandle, number, numberHandle, addPerson }) => {\n    return (\n      <form onSubmit={addPerson}>\n          <div>\n            name: \n            <input \n              value={name}\n              onChange={nameHandle}\n            />\n          </div>\n          <div>\n            number: \n            <input \n              value={number}\n              onChange={numberHandle}\n            />\n          </div>\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n      </form>\n    )\n  }\n\nexport default PersonForm","const Person = ({ person, remove }) => {\n    return(\n      <p>\n        {person.name} {person.number} <button onClick={() => remove(person.id)}>delete</button>\n      </p>\n    )}\n\n  export default Person","import Person from \"./Person\"\n\nconst Persons = ({ persons, showAll, search, remove }) => {\n    const personsToShow = showAll\n      ? persons\n      : persons.filter(person => person.name.toLocaleLowerCase().includes(search.toLocaleLowerCase()))\n  \n    return(\n      <div>\n      {personsToShow.map(person =>\n        <Person key={person.name} person={person} remove={remove}/>)}\n      </div>\n    )\n  }\n\nexport default Persons","const Notification = ({ message, type }) => {\n    const notificationStyle = {\n        color: 'green',\n        fontStyle: 'italic',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        margin: 10,\n    }\n    const errorStyle = {\n        color: 'red',\n        fontStyle: 'italic',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        margin: 10,\n    }\n    if (message === null) {\n        return null\n    }\n\n    else if (type === 'success')\n        return (\n            <div style={notificationStyle}>\n                <em>{message}</em>\n            </div>\n        )\n    else if (type === 'error')\n        return (\n            <div style={errorStyle}>\n                <em>{message}</em>\n            </div>\n        )\n}\n\nexport default Notification","import axios from \"axios\"\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst personService = {\n    getAll,\n    create,\n    remove,\n    update\n}\n\nexport default personService","import { useEffect, useState } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [searchName, setSearchName] = useState('')\n  const [message, setMessage] = useState(null)\n  const [messageType, setMessageType] = useState('')\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n        console.log(initialPersons)\n      })\n  }, [])\n\n  const handleSearchChange = (event) => {\n    console.log(event.target.value)\n    setSearchName(event.target.value)\n    if (searchName === '') {\n      setShowAll(true)\n    } else {\n      setShowAll(false)\n    }\n  }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    console.log(persons)\n    event.preventDefault()\n    const isNew = persons.find(person => person.name === newName)\n    if (isNew !== undefined && window.confirm(\n      `${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const personObject = {\n          name: newName,\n          number: newNumber\n        }\n  \n        personService\n          .update(isNew.id, personObject)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== isNew.id ? person : returnedPerson))\n            setMessage(`Updated ${newName}`)\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n            setNewName('')\n            setNewNumber('')\n            console.log(returnedPerson)\n          })\n    }\n    else if (isNew === undefined) {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      }\n\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setMessageType('success')\n          setMessage(`Added ${newName}`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n          setNewName('')\n          setNewNumber('')\n          console.log(persons)\n        })\n  }}\n\n  const removePerson = (id) => {\n    const person = persons.find(person => person.id === id)\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService\n      .remove(id)\n      .then(result => {\n        console.log(result)\n        setPersons(persons.filter(p => {return p.id !== id}))\n        setMessageType('success')\n        setMessage(`Removed ${person.name}`)\n        setTimeout(() => {\n          setMessage(null)\n          setMessageType('')\n        }, 5000)\n        console.log(persons)\n      })\n      .catch(error => {\n        setMessageType('error')\n        setMessage(`${person.name} was already removed`)\n        setTimeout(() => {\n        setMessage(null)\n        setMessageType('')\n        }, 5000)\n        setPersons(persons.filter(p => {return p.id !== id}))\n      })\n    }\n  }\n    \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} type={messageType} />\n      <Filter filter={searchName} handle={handleSearchChange}/>\n\n      <h3>Add a new</h3>\n\n      <PersonForm name={newName} nameHandle={handleNameChange} \n        number={newNumber} numberHandle={handleNumberChange} \n        addPerson={addPerson}\n      />\n      \n      <h3>Numbers</h3>\n\n      <Persons persons={persons} showAll={showAll} search={searchName} remove={removePerson}/>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.createRoot(document.getElementById('root')).render(<App />)"],"sourceRoot":""}